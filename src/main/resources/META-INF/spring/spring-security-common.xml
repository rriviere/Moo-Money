<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
	<!-- =============================== -->
	<!--      SECURITY EXCLUSIONS 		 -->
	<!-- =============================== -->
	<!-- excluded resources -->
	<http pattern="/resources/**" security="none"/>
	<http pattern="/resources/js/**" security="none"/>
	<http pattern="/resources/css/**" security="none"/>
	
	<!-- excluded pages -->
	<http pattern="/index.htm" security="none"/>
	<http pattern="/login.htm" security="none"/>
	<http pattern="/j_spring_security_check" security="none"/>
	<http pattern="/loginfailed.htm" security="none"/>
	<http pattern="/logout.htm" security="none"/>
	<http pattern="/sessionExpired.htm" security="none"/>
	<http pattern="/alreadyLoggedIn.htm" security="none"/>
	<http pattern="/sessionExpiredDuplicateLogin.htm" security="none"/>
	
	<!-- =============================== -->
	<!--      AUTHORIZATION		 		 -->
	<!-- 	  ROLE_1 - Operator 		 -->
	<!-- 	  ROLE_2 - Operator 		 -->
	<!--      ROLE_3 - Operator 		 -->
	<!-- 	  ROLE_4 - App. admin 		 -->
	<!-- 	  ROLE_7 - System admin 	 -->	
	<!-- =============================== -->	
	<http use-expressions="true" auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint">	
		<!-- custom filters	-->
		<custom-filter position="FORM_LOGIN_FILTER" ref="twoFactorAuthenticationFilter" />		
		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter"/>
		<custom-filter after="SECURITY_CONTEXT_FILTER" ref="securityLoggingFilter"/>
		<custom-filter before="SESSION_MANAGEMENT_FILTER" ref="sessionManagementFilter" />
   
	  	<!-- session management -->	
	  	<session-management session-authentication-strategy-ref="sas"/>
			
		<!-- error handlers -->
		<access-denied-handler error-page="/accessDenied.htm"/>				
				
		<!-- logout	-->	
		<logout 			
			invalidate-session="false" 
			delete-cookies="JSESSIONID" 
			success-handler-ref="customUrlLogoutSuccessHandler"/>
					  	 				
		<!-- authorize pages -->	
		<intercept-url pattern="/home.htm" access="isAuthenticated()" />
		<intercept-url pattern="/expenseList.htm" access="isAuthenticated()" />	
		<intercept-url pattern="/importExpenses.htm" access="isAuthenticated()" />			
		<intercept-url pattern="/internetBanking.htm" access="isAuthenticated()" />
		<intercept-url pattern="/fileUploads.htm" access="isAuthenticated()" />
		<intercept-url pattern="/batch/**" access="hasRole('ROLE_SUPER')" />
				
	</http>	
	
	<!-- =============================== -->
	<!--      AUTHENTICATION BEANS 		 -->
	<!-- =============================== -->
	<beans:bean id="authenticationProvider" 
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"
		p:userDetailsService-ref="userDetailsDao"
		p:passwordEncoder-ref="encoder" />
	
    <beans:bean id="twoFactorAuthenticationFilter" 
    	class="com.riviere.moomoney.security.TwoFactorAuthenticationFilter"
    	p:authenticationManager-ref="authenticationManager"
    	p:authenticationFailureHandler-ref="failureHandler"
    	p:authenticationSuccessHandler-ref="successHandler"
    	p:filterProcessesUrl="/j_spring_security_check"
    	p:sessionAuthenticationStrategy-ref="sas"
    	p:postOnly="true" />		

    <beans:bean id="loginUrlAuthenticationEntryPoint" 
    	class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
    	p:loginFormUrl="/login.htm" />
    
    <beans:bean id="successHandler" 
    	class="com.riviere.moomoney.security.CustomSavedRequestAwareAuthenticationSuccessHandler"
    	p:defaultTargetUrl="/home.htm" />

    <beans:bean id="failureHandler" 
    	class="com.riviere.moomoney.security.CustomSimpleUrlAuthenticationFailureHandler"
    	p:defaultFailureUrl="/loginfailed.htm" />

    <beans:bean id="customUrlLogoutSuccessHandler" 
    	class="com.riviere.moomoney.security.CustomUrlLogoutSuccessHandler"
    	p:defaultTargetUrl="/logout.htm" />
	
	<beans:bean id="sessionManagementFilter" 
		class="org.springframework.security.web.session.SessionManagementFilter"
		p:invalidSessionStrategy-ref="customSimpleRedirectInvalidSessionStrategy">
	    <beans:constructor-arg name="securityContextRepository" ref="httpSessionSecurityContextRepository" />	    
	</beans:bean>	
	
	<beans:bean id="customSimpleRedirectInvalidSessionStrategy" 
		class="com.riviere.moomoney.security.CustomSimpleRedirectInvalidSessionStrategy"
		p:createNewSession="false">
	  	<beans:constructor-arg name="invalidSessionUrl" value="/sessionExpired.htm" />
	</beans:bean>
	
	<beans:bean id="httpSessionSecurityContextRepository" 
		class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"/>	

	<beans:bean id="concurrencyFilter" 
		class="org.springframework.security.web.session.ConcurrentSessionFilter"
		p:sessionRegistry-ref="sessionRegistry" 
		p:expiredUrl="/sessionExpired.htm" />
		
	<beans:bean id="sas" 
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy"
	 	p:maximumSessions="1" >
	 		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	</beans:bean>
			  		
	<beans:bean id="sessionRegistry" 
		class="org.springframework.security.core.session.SessionRegistryImpl" />
			  			
	<authentication-manager alias="authenticationManager" erase-credentials="false">
		<authentication-provider ref="authenticationProvider"></authentication-provider>
	</authentication-manager>

	<!-- ======================================================================  -->
	<!--          Sets the user details into MDC for Log4j to access 		     -->
	<!--          Must occur after the SessionContextHolder has been populated 	 -->
	<!-- ======================================================================  -->
	<beans:bean id="securityLoggingFilter" 
		class="com.riviere.moomoney.filter.SecurityLoggingFilter"
		p:sessionRegistry-ref="sessionRegistry"/>
	
</beans:beans>